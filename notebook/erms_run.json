{
	"name": "erms_run",
	"properties": {
		"folder": {
			"name": "ce_pipelines/erms/extraction_operator"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "bmsparkpool22",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fbdd9049-0ec1-4ca4-b75c-f3536ca8ace6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8e862a61-456c-49b5-9e16-45c00c15686b/resourceGroups/synapsepoc/providers/Microsoft.Synapse/workspaces/bmworkspace2022/bigDataPools/bmsparkpool22",
				"name": "bmsparkpool22",
				"type": "Spark",
				"endpoint": "https://bmworkspace2022.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/bmsparkpool22",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%run ce_pipelines/common/az_table_connector"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pip install azure-storage-file-datalake"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run ce_pipelines/common/datalake_connector"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run ce_pipelines/erms/config/erms_config"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run ce_pipelines/erms/config/erms_logger_config"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run ce_pipelines/common/etl_status_recorder"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run ce_pipelines/common/ETL_Logger"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run ce_pipelines/erms/extraction_operator/organizations/extractor"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import tempfile\r\n",
					"import os\r\n",
					"import shutil\r\n",
					"from datetime import datetime\r\n",
					"\r\n",
					"#from ce_pipelines import DataLakeAdapter\r\n",
					"#from ce_pipelines.erms import config, logger\r\n",
					"#from ce_pipelines import ETLStatusRecorder\r\n",
					"#from ce_pipelines import ETLlogger\r\n",
					"\r\n",
					"#from .organizations import OrganizationsDataExtractor\r\n",
					"\r\n",
					"def execute(**kwargs):\r\n",
					"    # Update Default Config - Optional\r\n",
					"    config.update(kwargs)\r\n",
					"\r\n",
					"    esr = ETLStatusRecorder(config, logger)\r\n",
					"    last_successfully_executed_at = esr.get_last_successful_execution_at() \r\n",
					"\r\n",
					"    if last_successfully_executed_at:\r\n",
					"        config.update({'start_date': last_successfully_executed_at})\r\n",
					"    \r\n",
					"    # Initialize Staging Location\r\n",
					"    staging = DataLakeAdapter(config=config, logger=logger, env='staging')\r\n",
					"    organizations = OrganizationsDataExtractor(staging, config=config, logger=logger).extract()\r\n",
					"    logger.info(f\"Data extraction completed.\")\r\n",
					"\r\n",
					"    # Update logs to Azure Table\r\n",
					"\r\n",
					"    etl_logger = ETLlogger(_config = config)\r\n",
					"    etl_logger.update_logs(task = \"Extraction\",result = \"Success\")"
				],
				"execution_count": 7
			}
		]
	}
}