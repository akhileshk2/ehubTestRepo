{
	"name": "ETL_Logger",
	"properties": {
		"folder": {
			"name": "ce_pipelines/common"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "bmsparkpool2023",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "9548a03f-8fe9-412e-90f0-4492d35f228c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/a940a49d-4f38-49d5-8ee3-af225083b0bc/resourceGroups/EcosystemHub/providers/Microsoft.Synapse/workspaces/bmworkspace2023/bigDataPools/bmsparkpool2023",
				"name": "bmsparkpool2023",
				"type": "Spark",
				"endpoint": "https://bmworkspace2023.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/bmsparkpool2023",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import json\r\n",
					"from datetime import datetime\r\n",
					"from azure.data.tables import TableClient\r\n",
					"\r\n",
					"class ETLlogger:\r\n",
					"    def __init__(self,_config):\r\n",
					"        self._config = _config\r\n",
					"        \"\"\"Connect to Azure table\"\"\"\r\n",
					"        self.connection_str = \"DefaultEndpointsProtocol=https;AccountName=\" + _config.get('storage.account_name') + \";AccountKey=\" + \\\r\n",
					"                         _config.get('storage.account_key') + \";EndpointSuffix=core.windows.net\"\r\n",
					"        self.table_service = TableClient.from_connection_string(self.connection_str,\r\n",
					"                                                           table_name=_config.get('logging.table_name'))\r\n",
					"\r\n",
					"    def update_logs(self, task, result):\r\n",
					"        tday = datetime.now()\r\n",
					"        partition_key = tday.strftime(\"%Y%m%d\")\r\n",
					"        row_key = self._config.get('source_flag') + \"-\" + tday.strftime(\"%Y%m%d-%H%M%S\")\r\n",
					"        properties = {\r\n",
					"            'source': self._config.get('source_flag'),\r\n",
					"            'task': task,\r\n",
					"            'result': result\r\n",
					"        }\r\n",
					"\r\n",
					"        entity_values = {'PartitionKey': partition_key,\r\n",
					"                         'RowKey': row_key,\r\n",
					"                         'Result': json.dumps(properties)}\r\n",
					"\r\n",
					"        self.table_service.create_entity(entity=entity_values)"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pip install azure-data-tables"
				],
				"execution_count": 1
			}
		]
	}
}