{
	"name": "ent_cql",
	"properties": {
		"folder": {
			"name": "ce_pipelines/ent/load_operator/queries"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "bmsparkpool22",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "1",
				"spark.autotune.trackingId": "3f1e0236-758c-48ab-85a4-b0bc7f48586b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8e862a61-456c-49b5-9e16-45c00c15686b/resourceGroups/synapsepoc/providers/Microsoft.Synapse/workspaces/bmworkspace2022/bigDataPools/bmsparkpool22",
				"name": "bmsparkpool22",
				"type": "Spark",
				"endpoint": "https://bmworkspace2022.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/bmsparkpool22",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 5
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"ent_cypher = \"\"\"LOAD CSV WITH HEADERS FROM \"<<SAS_URL>>\"  AS line  \r\n",
					"\r\n",
					"WITH line, apoc.date.format(datetime().epochMillis,\"ms\", \"yyyy-MM-dd HH:mm:ss\") AS timeStamp\r\n",
					"\r\n",
					"//MATCH (ey:EY:Organization{key:'ey'})\r\n",
					"\r\n",
					"MERGE (per:Person{key:line.per_key})\r\n",
					"ON CREATE SET per.name = line.entrepreneurs_name\r\n",
					"ON CREATE SET per.email = line.entrepreneurs_email\r\n",
					"ON CREATE SET per.phone = line.entrepreneurs_mobile_phone\r\n",
					"ON CREATE SET per.createdAt = timeStamp\r\n",
					"SET per.updatedAt = timeStamp\r\n",
					"\r\n",
					"MERGE (psv:PersonSourceVersion:Version{id:'ENT'+ line.per_id, source:'ent'})\r\n",
					"ON CREATE SET psv.createdAt = timeStamp\r\n",
					"SET psv.updatedAt = timeStamp\r\n",
					"SET psv.name = line.entrepreneurs_name\r\n",
					"SET psv.email = line.entrepreneurs_email\r\n",
					"SET psv.phone = line.entrepreneurs_mobile_phone\r\n",
					"\r\n",
					"MERGE (per)-[:HAS_VERSION]->(psv)\r\n",
					"\r\n",
					"Merge (org:Organization{key:line.org_key})\r\n",
					"ON CREATE SET org.name = line.company_name\r\n",
					"ON CREATE SET org.address = line.company_address\r\n",
					"ON CREATE SET org.postalCode = line.company_postal_code\r\n",
					"ON CREATE SET org.phone = line.company_telephone\r\n",
					"ON CREATE SET org.foundedOn = line.company_founded_on\r\n",
					"ON CREATE SET org.homepageURL = line.company_website\r\n",
					"ON CREATE SET org.createdAt = timeStamp\r\n",
					"SET org.updatedAt = timeStamp\r\n",
					"SET org.tradingName = line.company_trading_name\r\n",
					"SET org.isOwned = CASE line.company_owned_flag WHEN 'Yes' THEN true WHEN 'No' THEN false ELSE null END \r\n",
					"SET org.ownedBy = line.company_owned_name\r\n",
					"SET org.geoReach = line.company_geo_reach\r\n",
					"SET org.duns = line.company_duns_no\r\n",
					"SET org.holding = CASE WHEN trim(COALESCE(line.company_public_private_flag, '')) <> '' THEN  trim(line.company_public_private_flag) ELSE NULL END\r\n",
					"SET org.goPublicYear = line.company_go_public_year\r\n",
					"SET org.tradingSymbol = line.company_trading_symbol\r\n",
					"SET org.connectionToEYType = 'direct'\r\n",
					"\r\n",
					"MERGE (osv:OrgSourceVersion:Version{id:'ENT'+line.org_id, source:'ent'})\r\n",
					"ON CREATE SET osv.createdAt = timeStamp\r\n",
					"SET osv.updatedAt = timeStamp\r\n",
					"SET osv.name = line.company_name\r\n",
					"SET osv.tradingName = line.company_trading_name\r\n",
					"SET osv.address = line.company_address\r\n",
					"SET osv.country = line.company_country\r\n",
					"SET osv.postalCode = line.company_postal_code\r\n",
					"SET osv.region = line.company_region_state\r\n",
					"SET osv.city = line.company_city\r\n",
					"SET osv.phone = line.company_telephone\r\n",
					"SET osv.socialMedia = line.social_media\r\n",
					"SET osv.isOwned = CASE line.company_owned_flag WHEN 'Yes' THEN true WHEN 'No' THEN false ELSE null END \r\n",
					"SET osv.ownedBy = line.company_owned_name\r\n",
					"SET osv.foundedOn = line.company_founded_on\r\n",
					"SET osv.geoReach = line.company_geo_reach\r\n",
					"SET osv.duns = line.company_duns_no\r\n",
					"SET osv.homepageURL = line.company_website\r\n",
					"SET osv.holding = CASE WHEN trim(COALESCE(line.company_public_private_flag, '')) <> '' THEN  trim(line.company_public_private_flag) ELSE NULL END\r\n",
					"SET osv.goPublicYear = line.company_go_public_year\r\n",
					"SET osv.tradingSymbol = line.company_trading_symbol\r\n",
					"\r\n",
					"MERGE (org)-[:HAS_VERSION]->(osv)\r\n",
					"\r\n",
					"MERGE (per)-[wi:WORKS_IN]->(org)\r\n",
					"ON CREATE SET wi.source = 'ent'\r\n",
					"SET wi.jobTitle = line.entrepreneurs_job_title\r\n",
					"SET wi.phone = line.entrepreneurs_work_phone\r\n",
					"SET wi.isFounder = CASE line.entrepreneurs_company_founder WHEN 'Yes' THEN true WHEN 'No' THEN false ELSE null END\r\n",
					"SET wi.percentOwned = line.entrepreneurs_company_founder\r\n",
					"\r\n",
					"MERGE (e:Event{key:line.event_key})\r\n",
					"ON CREATE SET e.createdAt = timeStamp\r\n",
					"SET e.updatedAt = timeStamp\r\n",
					"SET e.name = line.event_name\r\n",
					"SET e.type = CASE WHEN line.source = 'EOY UX' THEN 'EOY' ELSE line.source END\r\n",
					"SET e.area = line.event_area\r\n",
					"SET e.region = line.event_region\r\n",
					"SET e.year = line.event_year\r\n",
					"SET e.parentSource = 'ent'\r\n",
					"SET e.source = CASE WHEN line.source = 'EOY UX' THEN 'eoy' ELSE TOLOWER(line.source) END\r\n",
					"\r\n",
					"MERGE (per)-[pip:IS_PARTICIPANT]->(e)\r\n",
					"ON CREATE SET pip.createdAt = timeStamp\r\n",
					"SET pip.updatedAt = timeStamp\r\n",
					"SET pip.nominationId = line.event_nomination_id\r\n",
					"SET pip.nominationDate = line.event_nomination_date\r\n",
					"SET pip.source = 'ent'\r\n",
					"\r\n",
					"MERGE (org)-[oip:IS_PARTICIPANT]->(e)\r\n",
					"ON CREATE SET oip.createdAt = timeStamp\r\n",
					"SET oip.updatedAt = timeStamp\r\n",
					"SET oip.nominationId = line.event_nomination_id\r\n",
					"SET oip.nominationDate = line.event_nomination_date\r\n",
					"SET oip.source = 'ent'\r\n",
					"\r\n",
					"// EY Alumni\r\n",
					"FOREACH(ignore IN CASE WHEN line.ey_alumini_tier IS NOT NULL AND line.ey_alumini_tier <> '' THEN [1] ELSE [] END | \r\n",
					"    MERGE (per)-[awi:WORKS_IN]->(ey)\r\n",
					"    SET awi.source = 'ent'\r\n",
					"    SET awi.isActive = false\r\n",
					"    SET awi.isPrimary = false \r\n",
					"    SET awi.tier = line.ey_alumini_tier\r\n",
					")\r\n",
					"\r\n",
					"// Other EY data\r\n",
					"FOREACH(ignore IN CASE WHEN line.is_ey IN ['True', 'TRUE', 'true', true] THEN [1] ELSE [] END | \r\n",
					"    MERGE (e)-[ict:IS_CONNECTED_TO]->(ey)\r\n",
					"    SET ict.relationshipManager = line.ey_relationship_mgr\r\n",
					"    SET ict.host = line.ey_host\r\n",
					"    SET ict.lastTargetDate = line.ey_last_target_date\r\n",
					"    SET ict.targetNotes = line.ey_target_notes\r\n",
					"    SET ict.gnFlag = line.ey_growth_navigator_flag\r\n",
					"    SET ict.gnDate = line.ey_growth_navigator_date\r\n",
					"    SET ict.familyBiz = line.ey_family_biz_flag\r\n",
					")\r\n",
					"\r\n",
					"// EY Client\r\n",
					"FOREACH(ignore IN CASE WHEN line.ey_client_flag = 'Yes' THEN [1] ELSE [] END |\r\n",
					"    MERGE (org)-[:HAS_CUSTOMER_INFO{source:'ent'}]->(ci:CustomerInfo)\r\n",
					"    ON CREATE SET ci.id = line.ey_client_id\r\n",
					"    ON CREATE SET ci.createdAt = timeStamp\r\n",
					"    SET ci.updatedAt = timeStamp \r\n",
					"    SET ci.channel = line.ey_channel_nm\r\n",
					"    SET ci.marketSegment = line.ey_market_segment\r\n",
					"\r\n",
					"    SET osv.channel = line.ey_channel_nm\r\n",
					"    SET osv.clientId = line.ey_client_id\r\n",
					"\r\n",
					"    SET org.channel = line.ey_channel_nm\r\n",
					"    SET org.clientId = line.ey_client_id\r\n",
					")\r\n",
					"\r\n",
					"// EY IndustrySector (ey_industry transformed - & to and)\r\n",
					"FOREACH(ignore IN CASE WHEN line.ey_industry IS NOT NULL AND line.ey_industry <> '' THEN [1] ELSE [] END | \r\n",
					"    MERGE(sec:Sector{id:TOLOWER(line.ey_industry)})\r\n",
					"    ON CREATE SET sec.name = line.ey_industry\r\n",
					"    ON CREATE SET sec.createdAt = timeStamp\r\n",
					"    SET sec.updatedAt = timeStamp\r\n",
					"    \r\n",
					"    MERGE (org)-[ii:IS_IN]->(sec)\r\n",
					"    ON CREATE SET ii.createdAt = timeStamp\r\n",
					"    SET ii.updatedAt = timeStamp\r\n",
					"    SET ii.source = 'ent')\"\"\"\r\n",
					"\r\n",
					""
				],
				"execution_count": 1
			}
		]
	}
}